name: CI/CD Pipeline (Secrets Manager version)

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1  # Update to match your AWS region

      - name: Install dependencies for secret processing
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Authenticate to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Build and push backend image
        run: |
          docker build -t urchytech/backend:${{ github.sha }} ./backend
          docker tag urchytech/backend:${{ github.sha }} urchytech/backend:latest
          docker push urchytech/backend:${{ github.sha }}
          docker push urchytech/backend:latest

      - name: Build and push frontend image
        run: |
          docker build -t urchytech/frontend:${{ github.sha }} ./frontend
          docker tag urchytech/frontend:${{ github.sha }} urchytech/frontend:latest
          docker push urchytech/frontend:${{ github.sha }}
          docker push urchytech/frontend:latest

      - name: Secure deploy with AWS Secrets Manager
        run: |
          SECRET_ID=prod/3tier/db-creds
          export DB_HOST=$(aws secretsmanager get-secret-value --secret-id $SECRET_ID --query 'SecretString' --output text | jq -r .DB_HOST)
          export DB_PORT=$(aws secretsmanager get-secret-value --secret-id $SECRET_ID --query 'SecretString' --output text | jq -r .DB_PORT)
          export DB_USER=$(aws secretsmanager get-secret-value --secret-id $SECRET_ID --query 'SecretString' --output text | jq -r .DB_USER)
          export DB_PASSWORD=$(aws secretsmanager get-secret-value --secret-id $SECRET_ID --query 'SecretString' --output text | jq -r .DB_PASSWORD)
          export DB_NAME=$(aws secretsmanager get-secret-value --secret-id $SECRET_ID --query 'SecretString' --output text | jq -r .DB_NAME)

          envsubst < docker-compose.yml | docker compose -f - up --build -d
          docker compose ps -a

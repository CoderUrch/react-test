name: CI/CD Pipeline (.env version)

on:
  push:
    branches: [main, test]
  pull_request:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Generate .env file
        run: |
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env

      - name: Build and push backend
        run: |
          docker build -t urchytech/backend:${{ github.sha }} ./backend
          docker tag urchytech/backend:${{ github.sha }} urchytech/backend:latest
          docker push urchytech/backend:${{ github.sha }}
          docker push urchytech/backend:latest

      - name: Build and push frontend
        run: |
          docker build -t urchytech/frontend:${{ github.sha }} ./frontend
          docker tag urchytech/frontend:${{ github.sha }} urchytech/frontend:latest
          docker push urchytech/frontend:${{ github.sha }}
          docker push urchytech/frontend:latest

      - name: Deploy application
        run: |
          docker compose --env-file .env up --build -d
          docker compose ps -a # Verify containers are running
